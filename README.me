## 🧪 Projeto Robot-Curso — Automação com Robot Framework

Este projeto contém testes automatizados usando **Robot Framework**, organizados para demonstrar a estrutura de testes utilizando recursos, testes em múltiplos arquivos e evidências como relatórios e screenshots.

---

### ✅ Pré-requisitos

- Python 3.12 ou superior instalado
- VS Code recomendado (com extensão "Robot Framework Language Server")
- Git (opcional, para clonar o projeto)

---

### 📁 Estrutura do Projeto

```
📁 .venv/                        → Ambiente virtual isolado
📁 browser/                      → Evidências geradas (screenshots e traces)
📁 common/                      → Recursos e palavras-chave reutilizáveis
    └── amazon_resources.robot
📁 tests/                        → Arquivos de teste
    ├── amazon_test.robot
    └── amazon_test_bdd.robot
📄 README.me                     → Este guia
```

---

### 🚀 Passo a passo para rodar o projeto

#### 1. Clone ou baixe o projeto

```bash
git clone https://github.com/seu-usuario/Robot-Curso.git
cd Robot-Curso
```

#### 2. Crie e ative o ambiente virtual

```powershell
python -m venv .venv
```

> ⚠️ **Importante**: para ativar o ambiente virtual no **PowerShell**, use:

```powershell
& ".venv\Scripts\Activate.ps1"
```

Esse comando é obrigatório para que o terminal reconheça o `robot` e os pacotes instalados no ambiente.

---

#### 3. Instale as dependências

```bash
pip install robotframework
pip install robotframework-browser
rfbrowser init
```

---

### 🧪 Como rodar os testes

Após ativar o ambiente virtual com:

```powershell
& ".venv\Scripts\Activate.ps1"
```

Execute os testes com os comandos abaixo:

#### Rodar um teste específico
```bash
robot tests\amazon_test.robot
```

#### Rodar o teste BDD
```bash
robot tests\amazon_test_bdd.robot
```

#### Rodar todos os testes da pasta `tests`
```bash
robot tests
```

#### Rodar um teste usando recursos do `common`
Os testes já usam o arquivo `common/amazon_resources.robot` automaticamente via `Resource`, não sendo necessário nenhum passo extra para importar.

---

### 📊 Resultados e Evidências

Após rodar os testes, os seguintes arquivos serão gerados:

- `log.html` → Detalhes da execução dos testes
- `report.html` → Relatório geral
- `output.xml` → Arquivo de saída do Robot
- Screenshots (em falhas) na pasta `browser/screenshot`

Abra o `report.html` com o navegador para visualizar os resultados.

---

### ❗ Erros comuns

#### ⚠️ `'robot' não é reconhecido como um comando`
> Você esqueceu de ativar o ambiente virtual. Use:

```powershell
& ".venv\Scripts\Activate.ps1"
```